Changes between versions of a2c are listed in the following
categories:
a) Features changed in the a2c compiler that would change the
   output of an ASN.1 module
b) Features changed in the runtime library that results in
   different responses to calls
c) Features added to the a2c compiler
d) Features added to the runtime library
e) Other (such as documentation changes, additional tests,
   housekeeping changes, and so on)

For a typical developer, changes in the first two categories will be
significant because they might recompile their modules or recompile
the runtime library. Changes from the other categories should never
affect a program compiled with an older version of a2c.

--------------------------------------
Changes Between a2c Version 8 and Version 9

Compiler Changes
- Objects and object sets were not emitted as part of other objects. They now do [JLS]
- Object Sets did not emit correctly as part of classes.  They now do. [JLS]
- Upgrade to use Visual Studio 2008 from Visual Studio 2005 [JLS]
- Fix problems with inherited _description tables
- Fix a bug where the Binary command is ignored if type type has not already been emitted [JLS]
- Fix a bug where inline functions changed from DER to BER [JLS]
- Fix a bug where optional flags field not emitted in sequence/set [JLS]
- Rewrite of syntax for ElementSetSpec for optimization [JLS]
- Fix code dealing with supressing emission [JLS]

Runtime Changes
- Increase default size of the context stack. We push more often than we did before [JLS]
- Fix bug where booleans did not decode correctly when done one byte at a time [JLS]
- Fix bug where choices did not decode correctly when done one byte at a time [JLS]
- Fix decoder error for sequence of when done one byte at a time [JLS]

Compiler Feature Additions
- Add new compiler directive 'UseType' [JLS]
- Add new compiler directive 'AddToObjectSet' [JLS]
- Add an alternate way of finding end of statements -eolhint flag [JLS]
- Implement code for the CONTENTS constraint [JLS]
- Add new runtime flag "-version" to specify the version of ASN.1 to compile [JLS]
- Add new compiler directive 'EmitString' [JLS]
- Add error and warning checking on the components of an object identifier [JLS]

Runtime Feature Additions
- Implement code for CONTENTS constraint [JLS]

Other
- Fixed example-everything.asn to make the module not emit
  duplicate tags. [PH]

--------------------------------------
Changes Between a2c Version 7 and Version 8

Compiler Changes
- Clean up based on review of X.680 section 12 - Imports & Exports [JLS]
- Clean up based on review of X.680 section 13 - References - esp external [JLS]
- Correct code dealing with "]]" and object WithSyntax [JLS]
- Correct named lists and huge vs native typing [JLS]
- Values containing open types where not emitted correctly [JLS]
- Deal with circular class definitions [JLS]
- Deal with gcc build problems of output [JLS]

Runtime Changes
- Make the const key word optional

Compiler Feature Additions
- Fix code for automatic tag generation [JLS]
- New code for dealing with parameterized types added [JLS]
- Re-ordered parsing for fields of objects [JLS]
- Code for AUTOMATIC tagging was not enabled [JLS]
- Implemented "@." for table constraints [JLS]
- Add new compiler option -const [JLS]

Other
- Updated the Mono version information in CHANGES. [PH]
- Pulled in all new modules for test/ and changed all their
  dependencies [PH]

--------------------------------------
Changes Between a2c Version 6 and Version 7

Compiler Changes
- Clean up warnings generated by the MSFT C++ compiler [JLS]
- Correct inline API calls for (1) BER vs DER and (2) return
  type for compare routine [JLS]

Runtime Changes
- Clean up warnings generated by the MSFT C++ compiler [JLS]
- Correct inline API calls for (1) BER vs DER and (2) return
  type for compare routine [JLS]
- Make change from size_t to A2C_LENGTH [JLS]
- "Need more data" errors now convert to malformed encoding in many
  cases [JLS]
- Added the -s argument to 'ar' in the makefile for Mono-based
  systems to fix a problem in Mac OSX 10.5

Compiler Feature Additions
- None

Runtime Feature Additions
- Add files relating to streaming into files (not built by
  default) [JLS]

Other
- Changed the way that the makefile for test/ is created, based
  on a dependencies file [PH]
- Updated the copyright notice to 2008 [PH]
- Verified that a2c builds in Visual Studio 2008 [PH]

--------------------------------------
Changes Between a2c Version 5 and Version 6

Compiler Changes
- Last item in import list ends in {} failed parsing [JLS]
- Fix problem with empty set structures [JLS]
- Fix error on DEFAULT object value fields [JLS]
- Fix Issue#XX on trying to parse past the end of the file [JLS]
- Added the Pointer directive [JLS]
- Correct nested optional field behavior for WITH SYNTAX [JLS]
- Correct Value Set Type to setup internal structures correctly [JLS]
- Make updates to rewrite code on object sets [JLS]
- Make A2C_INLINE simpler and emit accordingly [JLS]
- Fix errors w/ Object Sets - some known errors still exist [JLS]
- Corect emission of #define's for CHOICE w/ extensibility [JLS]
- Change emission of #defines for OPTIONAL elements to use hex output [JLS]

Runtime Changes
- Correct prototypes for all init and release functions [JLS]
- explicit tagging uses indefinite encoding for BER [JLS]
- fix free error for string decode failures [JLS]
- move all SET and SEQUENCE encoding to a single common routine [JLS]

Compiler Feature Additions
- Add new option "-int-size=" [JLS]
- Extend commands to be cross module [JLS]
- Add new compiler command Pointer [JLS]

Runtime Feature Additions

Other
- Documented the Pointer directive [PH]

--------------------------------------
Changes Between a2c Version 5 and Version 6

Compiler Changes
- Last item in import list ends in {} failed parsing [JLS]
- Fix problem with empty set structures [JLS]
- Fix error on DEFAULT object value fields [JLS]
- Fix Issue#XX on trying to parse past the end of the file [JLS]
- Added the Pointer directive [JLS]
- Correct nested optional field behavior for WITH SYNTAX [JLS]
- Correct Value Set Type to setup internal structures correctly [JLS]
- Make updates to rewrite code on object sets [JLS]
- Make A2C_INLINE simpler and emit accordingly [JLS]
- Fix errors w/ Object Sets - some known errors still exist [JLS]
- Corect emission of #define's for CHOICE w/ extensibility [JLS]
- Change emission of #defines for OPTIONAL elements to use hex output [JLS]

Runtime Changes
- Correct prototypes for all init and release functions [JLS]
- explicit tagging uses indefinite encoding for BER [JLS]
- fix free error for string decode failures [JLS]
- move all SET and SEQUENCE encoding to a single common routine [JLS]

Compiler Feature Additions
- Add new option "-int-size=" [JLS]
- Extend commands to be cross module [JLS]
- Add new compiler command Pointer [JLS]

Runtime Feature Additions

Other
- Documented the Pointer directive [PH}

--------------------------------------
Changes Between a2c Version 4 and Version 5

Compiler Changes
- Fixed bug that prevented handling more than one ASN.1 module per
  input file [JLS]
- Fixed bug dealing with invalid commands not being consume correctly [JLS]

Runtime Changes
- Issue #16 - multiple optionals not correctly decoded [JLS]
- Issue #17 - Memory leak for octet string decoding [JLS]
- Correct BER decoding of bit strings [JLS]
- Issue #18 - Memory leak for SEQUENCE OF [JLS]
- Issue #19 - Memory leak for TAG [JLS]
- Missing code for VideoTex Strings [JLS]
- Made the type of BMPString and UniversalString to be unsigned
  ints instead of ints [JLS]

Compiler Feature Additions
- Start emitting structures for extensible SEQUENCE, SET and CHOICE [JLS]

Runtime Feature Additions
- Implement Validation code [JLS]

Other
- Added rfc5035.asn, rfc5083.asn, and rfc5084.asn to test/ [PH]
- Changed test/scvp.asn to test/rfc5055.asn because that is what
  it will be when released [PH]
- Updated all the RFC*.asn modules in test/ to match those in
  draft-hoffman-pkix-new-asn1-00 and draft-hoffman-cms-new-asn1-00
  I-Ds [PH]
- Removed note about not handling more than one ASN.1 module per
  input file [PH]
- Fixed README and program-everything.c to use the new types for
  BMPString and UniversalString [PH and JLS]
- Documented A2C_Validate and A2C_Validate2, both in the README
  and by adding an example in program-everything [PH]
- Documented A2C_FreeContext [PH]

--------------------------------------
Changes Between a2c Version 3 and Version 4

Compiler Changes
- Made the output of the .h files use C90 comments [PH]
- Handled exception syntax for SEQUENCE [JLS]
- No longer using path information for #defines in .h file [JLS]
- Made the default action to not emit anonymous unions [JLS]
- Emit typed functions for basic operations; this changed lots
  of the runtime calls but makes them more robust [JLS]

Runtime Changes
- Correct encoding for tagged type combinations [JLS]
- Correct cases where count of bytes was being returned to A2C_ERROR_Success [JLS]
- Cleaned up more gcc warnings as reported in Issue #5 [JLS]
- A2C_Print no longer null terminates the buffer [JLS]
- Issue #9 - put _RELATION_decode in .h file [JLS]
- Issue #8 - ifdef MIN [JLS] 

Compiler Feature Additions
- Added UseFunction command [JLS]
- Implemented required changes for the validate function [JLS]
- Added flag -anonymous-union [JLS]
- Added flag -inline [JLS]

Runtime Feature Addtions
- Implemented basic validation function code - Not for public use [JLS]
- Added new function A2C_GetStringFromStream [JLS]

Other
- Made the program1.c file use C90 comments; copied to README [PH]
- Corrected test/makefile for Windows environments [PH]
- Added "all" to test/makefile [PH]
- Updated program-1.c and program-everything for the new typed
  functions. [PH]
- Removed some examples from the README, but pointed readers to
  the real code in test/program-everything.c [PH]

--------------------------------------
Changes Between a2c Version 2 and Version 3

Compiler Changes
- Issue#6 - Not emitting optional tags [JLS]
- Issue#6 - Change optional flags to unsigned [JLS}
- Issue#5 - Change array initialization for Object Sets and Relationship constraints [JLS]
- String values are now recognized - Full testing still needs to be done for this [JLS]
- Correct optional flags emission for extensions [JLS]

Runtime Changes
- None

Compiler Feature Additions
- Syntax matching for UseFunction command - Feature is not yet complete [JLS]
- Issue#3 - Print error for unfound modules [JLS]

Runtime Feature Addtions
- Changed the commenting to be C90-compatible on *.c and *.h [PH]
- Added the -pedantic flag for non-Windows compiling [PH]
- Added a bunch of missing copyright notices [PH]

Other
- Added rfc4108 to the test/ directory and "make test" there [PH]

--------------------------------------
Changes Between a2c Version 1 and Version 2

Compiler Changes
- Corrected flag name for pointers from A2C_FLAGS_POINTER to
  A2C_FLAGS_DATA_PTR [JLS]
- Corrected variable name emissions for Component Relation Constraints [JLS]
- Change to emit enumeration defaults as simple values [JLS]
- Corrected numbering order of items in enumerations [JLS]

Runtime Changes
- Added suport for GeneralString in the runtime (it was already supported
  in the compiler) [PH]

Compiler Feature Additions
- Enumerations now correctly allow for extensions [JLS]

Runtime Feature Addtions
- Added A2C_Version(&some_int) [JLS]

Other
- Added the CHANGES file to the root directory [PH]
- Added rfc4556 to the test/ directory and "make test" there [PH]
- Added scvp module to the testing done with "make test" in test/. [PH]
- Added namespaces to some of the modules in test/ [PH]


